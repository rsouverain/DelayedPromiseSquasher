{
  "name": "delayed-promise-squasher",
  "version": "0.0.1",
  "description": "An instanciable class that will resolve your last pushed callback after a small delay without new push",
  "main": "index.js",
  "scripts": {
    "build": "cross-env BABEL_ENV=production babel src --out-dir dist"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rsouverain/DelayedPromiseSquasher.git"
  },
  "keywords": [
    "promise",
    "callback",
    "throttle",
    "delay",
    "squash"
  ],
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-env": "^1.6.1",
    "babel-preset-minify": "^0.3.0",
    "cross-env": "^5.1.3"
  },
  "author": "Remi Souverain",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rsouverain/DelayedPromiseSquasher/issues"
  },
  "homepage": "https://github.com/rsouverain/DelayedPromiseSquasher#readme"
}
